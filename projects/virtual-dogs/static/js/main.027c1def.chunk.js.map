{"version":3,"sources":["assets/images/pimpa.png","assets/images/batman.png","assets/images/unicorn.png","assets/images/pistorius.png","components/RunnerTrack/RunnerTrack.js","components/App/App.js","index.js"],"names":["module","exports","RunnerTrack","props","state","leftPosition","trackWidth","trackComponent","React","createRef","prevProps","this","runOn","moveDog","setState","current","offsetWidth","moverInterval","setInterval","stepLength","Math","random","clearInterval","onWin","runner","name","className","ref","style","left","backgroundImage","image","Component","App","results","runners","pimpa","unicorn","batman","pistorius","runnerName","console","log","gameStatus","map","key","onClick","switchGameStatus","length","Object","entries","e","registerWin","ReactDOM","render","document","getElementById"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,kSCwD5BC,G,kBApDX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,aAAc,GAElB,EAAKC,WAAa,EAClB,EAAKC,eAAiBC,IAAMC,YAPb,E,gFAUAC,GACXC,KAAKR,MAAMS,QAAUF,EAAUE,QAC5BD,KAAKR,MAAMS,MACVD,KAAKE,UAELF,KAAKG,SAAS,CACXT,aAAc,O,0CAOzBM,KAAKL,WAAaK,KAAKJ,eAAeQ,QAAQC,YAAc,K,8BAGxDb,GAAQ,IAAD,OACLc,EAAgBC,aAClB,WACI,IAAMC,EAA6B,GAAhBC,KAAKC,SAAgB,GACxC,EAAKP,SAAS,CACVT,aAAc,EAAKD,MAAMC,aAAec,IAExC,EAAKb,WAAa,EAAKF,MAAMC,aAAec,EAAW,IACvDG,cAAcL,GACd,EAAKd,MAAMoB,MAAM,EAAKpB,MAAMqB,OAAOC,SAExC,O,6BAGJtB,GACH,OAEI,yBAAKuB,UAAU,cAAcC,IAAKhB,KAAKJ,gBACnC,yBAAKmB,UAAU,MACVE,MAAO,CAACC,KAAMlB,KAAKP,MAAMC,aAAcyB,gBAAgB,QAAD,OAAUnB,KAAKR,MAAMqB,OAAOO,MAA5B,SAC3D,yBAAKL,UAAU,a,GA/CLM,cCwFXC,E,YAjFX,WAAY9B,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACXQ,OAAO,EACPsB,QAAS,IAGX,EAAKC,QAAU,CACX,CACIV,KAAM,QACNM,MAAOK,KAEX,CACIX,KAAM,WACNM,MAAOM,KAEX,CACIZ,KAAM,SACNM,MAAOO,KAEX,CACIb,KAAM,YACNM,MAAOQ,MAtBA,E,yEA6BPC,GACRC,QAAQC,IAAIF,GACZ7B,KAAKG,SAAS,CACVoB,QAAQ,GAAD,mBAAMvB,KAAKP,MAAM8B,SAAjB,CAA0BM,Q,uCAKxBG,GACbhC,KAAKG,SAAS,CACXF,MAAO+B,EACNT,QAAS,O,+BAIP,IAAD,SACsBvB,KAAKP,MAAxBQ,EADH,EACGA,MAAOsB,EADV,EACUA,QACf,OACI,yBAAKR,UAAU,OACX,yBAAKA,UAAU,WACTd,EAKE,yBAAKc,UAAU,WACX,8CAGEQ,EAAQU,KAAI,SAACJ,EAAYK,GAAb,OACV,uBAAGA,IAAKA,GACJ,8BAAOA,EAAI,EAAX,KACCL,OAXb,4BAAQM,QAAS,kBAAM,EAAKC,kBAAiB,KAA7C,eAgBgB,IAAnBb,EAAQc,OACL,4BAAQF,QAAS,kBAAM,EAAKC,kBAAiB,KAA7C,cACA,IAER,yBAAKrB,UAAU,UACTuB,OAAOC,QAAQvC,KAAKwB,SAASS,KAAK,SAACpB,EAAQqB,GAAT,OAChC,kBAAC,EAAD,CAAaA,IAAKA,EAAKrB,OAAQA,EAAO,GAAIZ,MAAOA,EAAOW,MAAO,SAAA4B,GAAC,OAAI,EAAKC,YAAYD,e,GAzE3FnB,a,MCHlBqB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.027c1def.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pimpa.c79c5b1a.png\";","module.exports = __webpack_public_path__ + \"static/media/batman.e2de96bf.png\";","module.exports = __webpack_public_path__ + \"static/media/unicorn.7ea21dac.png\";","module.exports = __webpack_public_path__ + \"static/media/pistorius.b942ee7c.png\";","import React, {Component} from \"react\";\nimport './RunnerTrack.scss';\n\nclass RunnerTrack extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            leftPosition: 0,\n        };\n        this.trackWidth = 0;\n        this.trackComponent = React.createRef();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.runOn !== prevProps.runOn) {\n            if(this.props.runOn) {\n                this.moveDog();\n            } else {\n                this.setState({\n                   leftPosition: 0,\n                });\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.trackWidth = this.trackComponent.current.offsetWidth - 16 * 5;\n    }\n\n    moveDog(props) {\n        const moverInterval = setInterval(\n            () => {\n                const stepLength = Math.random() * 90 + 10;\n                this.setState({\n                    leftPosition: this.state.leftPosition + stepLength,\n                });\n                if (this.trackWidth - this.state.leftPosition < stepLength/2) {\n                    clearInterval(moverInterval);\n                    this.props.onWin(this.props.runner.name);\n                }\n            }, 200);\n    }\n\n    render(props) {\n        return (\n\n            <div className=\"RunnerTrack\" ref={this.trackComponent}>\n                <div className=\"dog\"\n                     style={{left: this.state.leftPosition, backgroundImage: `url('${this.props.runner.image}')`}}/>\n                <div className=\"end\"/>\n            </div>\n        );\n    }\n}\n\nexport default RunnerTrack;","import React, { Component } from \"react\";\nimport './App.scss';\nimport pimpa from '../../assets/images/pimpa.png';\nimport batman from '../../assets/images/batman.png';\nimport unicorn from '../../assets/images/unicorn.png';\nimport pistorius from '../../assets/images/pistorius.png'\n\nimport RunnerTrack from \"../RunnerTrack/RunnerTrack\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          runOn: false,\n          results: [],\n        };\n\n        this.runners = [\n            {\n                name: 'Pimpa',\n                image: pimpa,\n            },\n            {\n                name: 'Unicorno',\n                image: unicorn,\n            },\n            {\n                name: 'Batman',\n                image: batman,\n            },\n            {\n                name: 'Pistorius',\n                image: pistorius,\n            }\n\n        ];\n\n    }\n\n    registerWin(runnerName) {\n        console.log(runnerName);\n        this.setState({\n            results: [...this.state.results, runnerName],\n        });\n    }\n\n\n    switchGameStatus(gameStatus) {\n        this.setState({\n           runOn: gameStatus,\n            results: [],\n        });\n    }\n\n    render() {\n        const { runOn, results } = this.state;\n        return (\n            <div className=\"App\">\n                <div className=\"console\">\n                    {!runOn ? (\n                        <button onClick={() => this.switchGameStatus(true)}>\n                            INIZIA GARA\n                        </button>\n                    ): (\n                        <div className=\"results\">\n                            <header>\n                                Risultati:\n                            </header>\n                            { results.map((runnerName, key) =>\n                                <p key={key}>\n                                    <span>{key+1}.</span>\n                                    {runnerName}\n                                </p>\n                            )}\n                        </div>\n                    )}\n                    {results.length === 4 ? (\n                        <button onClick={() => this.switchGameStatus(false)}>NUOVA GARA</button>\n                    ): ('')}\n                </div>\n                <div className=\"tracks\">\n                    { Object.entries(this.runners).map( (runner, key) =>\n                        <RunnerTrack key={key} runner={runner[1]} runOn={runOn} onWin={e => this.registerWin(e)}/>\n                    )}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/index.scss';\nimport App from './components/App/App';\nimport 'typeface-dosis';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}